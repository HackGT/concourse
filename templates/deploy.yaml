resource_types:
- name: helm-resource
  type: docker-image
  source:
    repository: hackgt/helm-resource

- name: k8s-resource
  type: docker-image
  source:
    repository: frodenas/k8s-resource

resources:
<% if pipeline[:charts].length > 0 %>
- name: helm
  type: helm-resource
  source:
    url: "{{k8s_url}}"
    ca_data: "{{k8s_ca_data}}"
    username: "{{k8s_user}}"
    password: "{{k8s_pass}}"
    namespace: default

- name: helm-charts
  type: git
  source:
    uri: <%= pipeline[:git_remote] %>
    branch: master
    version:
      ref: <%= pipeline[:git_ref] %>
    paths:
      - <%= pipeline[:git_path] %>
<% end %>

<% if pipeline[:runnables].length > 0 %>
- name: hackgt-cluster
  type: k8s-resource
  source:
    url: "{{k8s_url}}"
    skip_tls_verify: true
    username: "{{k8s_user}}"
    password: "{{k8s_pass}}"
    namespace: default
<% end %>

jobs:
<% if pipeline[:runnables].length > 0 %>
- name: deploy
  public: true
  plan:
  <% if pipeline[:charts].length > 0 %>
  - aggregate:
    - get: helm-charts
      trigger: true
    - get: helm
      trigger: true
  - put: helm
    params:
      charts:
      <% for chart in pipeline[:charts] %>
        <%= chart['name'] %>:
          name: <%= chart['helm'] %>
          <% if chart.include? 'version' %>
          version: <%= chart['version'] %>
          <% end %>
      <% end %>
  <% end %>
  - aggregate:
    <% for app in pipeline[:runnables] %>
    - get: <%= app['name'] %>
      trigger: true
      passed: [build-<%= app['name'] %>-image]
    <% end %>
  - task: build-k8s-config
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: busybox
      inputs:
      <% for app in pipeline[:runnables] %>
      - name: <%= app['name'] %>
      <% end %>
      outputs:
      - name: built-config
      params:
        <% kubes_spec = pipeline.load_with 'kubernetes-spec', app %>
        KUBERNETES_SPEC: |
          <%= (pipeline.indent 10, kubes_spec).strip %>
      run:
        path: sh
        args:
          - -c
          - 'echo "$KUBERNETES_SPEC" | tee built-config/deployment.yaml'
  - put: hackgt-cluster
    params:
      spec_path: built-config/deployment.yaml
<% end %>
