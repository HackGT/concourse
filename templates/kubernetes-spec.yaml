<% proxied_apps = pipeline[:runnables].select { |a| a['run']['port'] } %>
<% if not proxied_apps.empty? %>
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: <%= pipeline[:name] %>
spec:
  rules:
<% for app in proxied_apps %>
  - host: <%= app['name'] %>.<%= pipeline[:name] %>.<%= pipeline[:biodome]['domain'] %>
    http:
      paths:
      - backend:
          serviceName: <%= app['name'] %>-service
          servicePort: 80
<% end %>
<% end %>
<% for app in pipeline[:runnables] %>
<% if app['run']['port'] %>
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: <%= app['name'] %>
  name: <%= app['name'] %>-service
spec:
  ports:
  - port: 80
    protocol: <%= app['run']['protocol'] || 'TCP' %>
    targetPort: <%= app['run']['port'] %>
  selector:
    name: <%= app['name'] %>
<% end %>
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: <%= app['name'] %>
spec:
  replicas: 1
  template:
    metadata:
      name: <%= app['name'] %>
      labels:
        name: <%= app['name'] %>
    spec:
      containers:
      - name: <%= app['name'] %>-container
        image: <%= dockerhub_from_git app['git'] %>:<%= app['git_ref'] %>
        <% if app['run']['port'] %>
        ports:
        - containerPort: <%= app['run']['port'] %>
        <% end %>
        env:
        - name: UNIQUE_APP_ID
          value: <%= app['name'].to_s.inspect %>
        <% for e in (pipeline[:env] || []) %>
        - name: <%= e['name'] %>
          value: <%= e['value'].to_s.inspect %>
        <% end %>
        <% for a in (pipeline[:charts] || []) %>
        - name: <%= a['helm'].upcase %>_HOST
          value: <%= a['name'].to_s.inspect %>
        <% end %>
        <% for env in (app['env'] || []) %>
        - name: <%= env['name'] %>
          value: <%= env['value'].to_s.inspect %>
        <% end %>
<% end %>
